require('dotenv').config()
const express = require('express')
const { db } = require('./database')
const CronJob = require('cron').CronJob
const moment = require('moment')
const axios = require('axios')
const nodemailer = require('nodemailer')
// const sharp = require('sharp')
const path = require('path')

const app = express()

app.use(express.static(path.join(__dirname, "/../public/gambar/")))

// mailer
let transport = nodemailer.createTransport({
    host: process.env.MAIL_HOST,
    port: process.env.MAIL_PORT,
    auth: {
      user: process.env.MAIL_USERNAME, //generated by Mailtrap
      pass: process.env.MAIL_PASSWORD //generated by Mailtrap
    }
})


app.get('/ping', (req, res) => {
    return res.json({ msg: 'Running' })
})

app.get('/test', async (req, res) => {
    // sendMailPromo('Hey there, it’s our first message sent with Nodemailer ;) ', 'admin@sinemaku.com')
    // const metadata = await sharp("../public/gambar/20220725020322.png").metadata();
    // console.log(metadata);

    // console.log(path.join(__dirname, "../public/gambar/20220725020322.png"))
    // return res.sendFile(path.join(__dirname, "../index.html"))
    return res.json({ msg: 'test' })
})

/**
 * Function kirim email
 */
const sendMailPromo = async (promo, email) => {
    // console.log(promo.pekerjaan)
    let gambar = null
    if (promo.pekerjaan === 'Mahasiswa') {
        gambar = 'mahasiswa.png'
    }else if(promo.pekerjaan === 'ASN'){
        gambar = 'ASN.png'
    }else if(promo.pekerjaan === 'Wiraswasta'){
        gambar = 'wiraswasta.png'
    }else if(promo.pekerjaan === 'Siswa'){
        gambar = 'siswa.png'
    }

    email.map((to, i) => {
        // console.log(to)
        let mailOptions = {
            from: '"Sinema Untan" <sinemaku@gmail.com>',
            to: to,
            subject: 'Sinema Untan',
            // text: 'Hey there, it’s our first message sent with Nodemailer ;) ',
            // html: '<b>Hey there! </b><br> This is our first message sent with Nodemailer'
            attachments: [{
                filename: gambar,
                // path: `${__dirname}/../public/gambar/20220725021015.png`,
                path: `${__dirname}/images/${gambar}`,
                // path: path.join(__dirname, `../resources/assets/20220725022550.png`),
                cid: 'gbrpromo' //same cid value as in the html img src
            }],
            html: `
                <!DOCTYPE html>
                <html>
                    <head>
                        <title>Sinema Untan</title>
                    </head>
                    <body align="justify">
                        <h1>${promo.nama_promo}</h1>
                        <img src="cid:gbrpromo" alt="promo" width="900px" height="500px">
                        <p style="font-size:14px">${promo.keterangan}</p>
                        <a href="${process.env.APP_URL}" class="btn">Klik Link</a>
                    </body>
                </html>
            `
        };
    
        // send mail
        transport.sendMail(mailOptions, (error, info) => {
            if (error) {
              return console.log(error);
            }
            // console.log('Message sent: %s', info.messageId);
        });
    })

    return true;
}

/**
 * CRON JOB
 */
const job = new CronJob(
    '*/2 * * * * *',
    async () => {
        // const today = new Date()
        // var time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds()
        // console.log(time)
        // console.log('cron job running')

        db.query('SELECT * FROM promos', (err, promos) => {
            /** data promo */
            promos.map((promo, i) => {
                if (!promo.send_at) return null

                const promoPekerjaan = promo.pekerjaan

                const timeNow = moment().format('YYYY-MM-DD HH:mm')
                const timeSend = promo.send_at && moment(promo.send_at).format('YYYY-MM-DD HH:mm')

                if (timeNow >= timeSend) {
                    // table users filter by pekerjaan
                    db.query(`SELECT * FROM users WHERE pekerjaan='${promoPekerjaan}'`, async (err, users) => {
                        // empty user return null
                        if (!users) return null

                        let sender = process.env.WA_SENDER
                        let params = []
                        let dataUsers = []
                        //
                        users.map(async (user, i) => {
                            /** credential */
                            params.push({
                                receiver: user.no_hp,
                                message: promo.keterangan,
                            })

                            dataUsers.push(user.email)
                        })

                        let url = `${process.env.WA_URL}/chats/send-bulk?id=${sender}`
                        // send wa
                        await axios
                            .post(url, params)
                            .then((response) => {
                                db.query(`UPDATE promos SET send_at=NULL WHERE id=${promo.id}`)
                            })
                            .catch((err) => {
                                // console.log(err)
                                return null
                            })

                        /** send email */
                        const mail = await sendMailPromo(promo, dataUsers)
                        if (mail) {
                            db.query(`UPDATE promos SET send_at=NULL WHERE id=${promo.id}`)
                        }
                    })
                }
                // console.log(promo.nama_promo)
            })
        })
    },
    null,
    true,
    'Asia/Jakarta'
)
job.start()

// console.log(process.env.APP_URL)
// const appUrl = process.env.APP_URL
const appUrl = 8080
app.listen(appUrl, () => console.log(`Server running at ${appUrl}`))
